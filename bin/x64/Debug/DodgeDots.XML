<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DodgeDots</name>
    </assembly>
    <members>
        <member name="T:DodgeDots.App">
            <summary>
                Provides application-specific behavior to supplement the default Application class.
            </summary>
        </member>
        <member name="M:DodgeDots.App.#ctor">
            <summary>
                Initializes the singleton application object.  This is the first line of authored code
                executed, and as such is the logical equivalent of main() or WinMain().
            </summary>
        </member>
        <member name="M:DodgeDots.App.OnLaunched(Windows.ApplicationModel.Activation.LaunchActivatedEventArgs)">
            <summary>
                Invoked when the application is launched normally by the end user.  Other entry points
                will be used such as when the application is launched to open a specific file.
            </summary>
            <param name="e">Details about the launch request and process.</param>
        </member>
        <member name="M:DodgeDots.App.OnNavigationFailed(System.Object,Windows.UI.Xaml.Navigation.NavigationFailedEventArgs)">
            <summary>
                Invoked when Navigation to a certain page fails
            </summary>
            <param name="sender">The Frame which failed navigation</param>
            <param name="e">Details about the navigation failure</param>
        </member>
        <member name="M:DodgeDots.App.OnSuspending(System.Object,Windows.ApplicationModel.SuspendingEventArgs)">
            <summary>
                Invoked when application execution is being suspended.  Application state is saved
                without knowing whether the application will be terminated or resumed with the contents
                of memory still intact.
            </summary>
            <param name="sender">The source of the suspend request.</param>
            <param name="e">Details about the suspend request.</param>
        </member>
        <member name="M:DodgeDots.App.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:DodgeDots.App.GetXamlType(System.Type)">
            <summary>
            GetXamlType(Type)
            </summary>
        </member>
        <member name="M:DodgeDots.App.GetXamlType(System.String)">
            <summary>
            GetXamlType(String)
            </summary>
        </member>
        <member name="M:DodgeDots.App.GetXmlnsDefinitions">
            <summary>
            GetXmlnsDefinitions()
            </summary>
        </member>
        <member name="T:DodgeDots.Model.AudioPlayer">
            <summary>
                The Audio Player class.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.AudioPlayer.AudioFolder">
            <summary>
                Gets the audio folder.
            </summary>
            <value>
                The audio folder.
            </value>
        </member>
        <member name="M:DodgeDots.Model.AudioPlayer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:DodgeDots.Model.AudioPlayer" /> class.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.AudioPlayer.PlayAudio(Windows.Storage.StorageFile)">
            <summary>
                Plays the audio from the specified file.
            </summary>
            <param name="file">The audio file that will be played.</param>
        </member>
        <member name="T:DodgeDots.Model.Dot">
            <summary>
                Manages the dot
            </summary>
            <seealso cref="T:DodgeDots.Model.GameObject" />
        </member>
        <member name="P:DodgeDots.Model.Dot.Color">
            <summary>
                Gets the color of the dot.
            </summary>
            <value>
                The color.
            </value>
        </member>
        <member name="M:DodgeDots.Model.Dot.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:DodgeDots.Model.Dot" /> class.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.Dot.SetColor(Windows.UI.Color)">
            <summary>
                Sets the color of the dot.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="T:DodgeDots.Model.DotFactory">
            <summary>
                Dot Factory class
            </summary>
            <seealso cref="T:DodgeDots.Model.GameObject" />
        </member>
        <member name="P:DodgeDots.Model.DotFactory.DiagonalSpeed">
            <summary>
                Gets if the wave is diagonal or not.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.DotFactory.CreateDot(Windows.UI.Color,DodgeDots.Model.GameSettings.Wave,System.Int32,System.Boolean)">
            <summary>
                Creates the dot.
            </summary>
            <returns>The new dot created</returns>
            <param name="color">The color of the dot.</param>
            <param name="wave">The wave the dot is in.</param>
            <param name="finalMultiplier">The multiplier to adjust speed for final blitz.</param>
            <param name="diagonal">If the wave is diagonal or not.</param>
        </member>
        <member name="T:DodgeDots.Model.DotManager">
            <summary>
                Manages the dots in a game.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.DotManager.FinalBlitzMultiplier">
            <summary>
                The amount to multiply the speed of the final blitz by.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.DotManager.DiagonalWave">
            <summary>
                Creates dots with diagonal movement.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.DotManager.#ctor(Windows.UI.Xaml.Controls.Canvas,DodgeDots.Model.GameSettings.Wave,Windows.UI.Color)">
            <summary>
                Initializes a new instance of the <see cref="T:DodgeDots.Model.DotManager" /> class.
                Precondition: None
                Post-condition: dots list is created, and tick is setup
            </summary>
            <param name="background">The background.</param>
            <param name="wave">The wave to generate.</param>
            <param name="color">The color of dots.</param>
        </member>
        <member name="M:DodgeDots.Model.DotManager.GetEnumerator">
            <summary>
                Ability to iterate through the collection of dots.
            </summary>
            <returns> an enumerator that iterates through the collection of dots </returns>
        </member>
        <member name="M:DodgeDots.Model.DotManager.StopDotManager">
            <summary>
                Stops the dots from running.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.DotManager.RemoveAllDots">
            <summary>
                Removes all dots from tracking and from the display.
            </summary>
        </member>
        <member name="T:DodgeDots.Model.GameManager">
            <summary>
                Manages the entire game.
            </summary>
        </member>
        <member name="T:DodgeDots.Model.GameManager.GameOverHandler">
            <summary>
                A delegate for winning the game.
            </summary>
        </member>
        <member name="T:DodgeDots.Model.GameManager.GameScoreHandler">
            <summary>
                A delegate for the game score
            </summary>
            <param name="gameScore">The game score number.</param>
        </member>
        <member name="T:DodgeDots.Model.GameManager.GameTimeHandler">
            <summary>
                A delegate for the countdown
            </summary>
            <param name="countDownNumber">The count down number.</param>
        </member>
        <member name="T:DodgeDots.Model.GameManager.LevelCompletedHandler">
            <summary>
                A delegate for the winning a level
            </summary>
        </member>
        <member name="T:DodgeDots.Model.GameManager.LevelHandler">
            <summary>
                A delegate for the game level
            </summary>
            <param name="levelTitle">The title of the level.</param>
        </member>
        <member name="T:DodgeDots.Model.GameManager.LifeHandler">
            <summary>
                A delegate for updating the lives
            </summary>
            <param name="lives">The lives.</param>
        </member>
        <member name="P:DodgeDots.Model.GameManager.GameScore">
            <summary>
                Gets the game score.
            </summary>
            <value>
                The game score.
            </value>
        </member>
        <member name="P:DodgeDots.Model.GameManager.CurrentLevel">
            <summary>
                Gets the current level of the game.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.GameManager.#ctor(Windows.UI.Xaml.Controls.Canvas,DodgeDots.Model.PlayerDotManager,DodgeDots.Model.HighScoreManager)">
            <summary>
                Initializes a new instance of the <see cref="T:DodgeDots.Model.GameManager" /> class.
            </summary>
            <param name="background">The canvas to display the game on.</param>
            <param name="player">The player object within the game.</param>
            <param name="scoreBoard">The scoreboard to save the users score to.</param>
        </member>
        <member name="M:DodgeDots.Model.GameManager.InitializeGameAsync">
            <summary>
                Initialize and run the game.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.GameManager.SaveGameScore(System.String)">
            <summary>
                Saves the users score for the game.
            </summary>
            <param name="username">The name for the user</param>
        </member>
        <member name="E:DodgeDots.Model.GameManager.GameTimeUpdated">
            <summary>
                Occurs when [game time updated].
            </summary>
        </member>
        <member name="E:DodgeDots.Model.GameManager.GameScoreUpdated">
            <summary>
                Occurs when [game time updated].
            </summary>
        </member>
        <member name="E:DodgeDots.Model.GameManager.LevelUpdated">
            <summary>
                Occurs when [game time updated].
            </summary>
        </member>
        <member name="E:DodgeDots.Model.GameManager.LifeUpdated">
            <summary>
                Occurs when [life updated].
            </summary>
        </member>
        <member name="E:DodgeDots.Model.GameManager.LevelCompleted">
            <summary>
                Occurs when level is won.
            </summary>
        </member>
        <member name="E:DodgeDots.Model.GameManager.GameOver">
            <summary>
                Occurs when [game won].
            </summary>
        </member>
        <member name="T:DodgeDots.Model.GameObject">
            <summary>
                Defines basics of every game object.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.GameObject.X">
            <summary>
                Gets or sets the x location of the game object.
            </summary>
            <value>
                The x.
            </value>
        </member>
        <member name="P:DodgeDots.Model.GameObject.Y">
            <summary>
                Gets or sets the y location of the game object.
            </summary>
            <value>
                The y.
            </value>
        </member>
        <member name="P:DodgeDots.Model.GameObject.SpeedX">
            <summary>
                Gets the x speed of the game object.
            </summary>
            <value>
                The speed x.
            </value>
        </member>
        <member name="P:DodgeDots.Model.GameObject.SpeedY">
            <summary>
                Gets the y speed of the game object.
            </summary>
            <value>
                The speed y.
            </value>
        </member>
        <member name="P:DodgeDots.Model.GameObject.Width">
            <summary>
                Gets the width of the game object.
            </summary>
            <value>
                The width.
            </value>
        </member>
        <member name="P:DodgeDots.Model.GameObject.Height">
            <summary>
                Gets the height of the game object.
            </summary>
            <value>
                The height.
            </value>
        </member>
        <member name="P:DodgeDots.Model.GameObject.Sprite">
            <summary>
                Gets or sets the sprite associated with the game object.
            </summary>
            <value>
                The sprite.
            </value>
        </member>
        <member name="M:DodgeDots.Model.GameObject.Move">
            <summary>
                Moves the game object down.
                Precondition: None
                Post-condition: Y == Y@prev + SpeedY
            </summary>
        </member>
        <member name="M:DodgeDots.Model.GameObject.SetSpeed(System.Int32,System.Int32)">
            <summary>
                Sets the speed of the game object.
                Precondition: speedX >= 0 AND speedY >=0
                Post-condition: SpeedX == speedX AND SpeedY == speedY
            </summary>
            <param name="speedX">The speed x.</param>
            <param name="speedY">The speed y.</param>
        </member>
        <member name="T:DodgeDots.Model.GameSettings">
            <summary>
                Holds the settings used in the game
            </summary>
        </member>
        <member name="T:DodgeDots.Model.GameSettings.PointType">
            <summary>
                The types of point objects and the associated point value.
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.PointType.Basic">
            <summary>
                Basic points that spawn with normal frequency.
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.PointType.Mid">
            <summary>
                Medium value points that spawn uncommonly.
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.PointType.Max">
            <summary>
                Max value points that spawn rarely
            </summary>
        </member>
        <member name="T:DodgeDots.Model.GameSettings.Wave">
            <summary>
                The waves the game can have in a level.
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.Wave.North">
            <summary>
                The wave coming from the North.
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.Wave.West">
            <summary>
                The wave coming from the West.
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.Wave.South">
            <summary>
                The wave coming from the South.
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.Wave.East">
            <summary>
                The wave coming from the East.
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.Wave.NsFinalBlitz">
            <summary>
                The wave coming from the North and South.
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.Wave.DiagonalFinalBlitz">
            <summary>
                The wave coming diagonally.
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.DyingAnimationLength">
            <summary>
                The length in seconds of the dying animation.
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.PlayerLives">
            <summary>
                The number of lives the player gets
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.ApplicationHeight">
            <summary>
                The application height
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.ApplicationWidth">
            <summary>
                The application width
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.BasicPointColor">
            <summary>
                The color of the basic point object.
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.BasicRarity">
            <summary>
                The rarity of the basic point object. (1 - 10)
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.MidPointColor">
            <summary>
                The color of the Mid point object.
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.MidRarity">
            <summary>
                The rarity of the mid point object. (1 - 10)
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.MaxPointColor">
            <summary>
                The color of the Max point object.
            </summary>
        </member>
        <member name="F:DodgeDots.Model.GameSettings.MaxRarity">
            <summary>
                The rarity of the max point object. (1 - 10)
            </summary>
        </member>
        <member name="T:DodgeDots.Model.HighScoreManager">
            <summary>
                Handles saving and loading of the score board.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.HighScoreManager.TopTen">
            <summary>
                The top ten scores sorted.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.HighScoreManager.LoadHighScoresAsync">
            <summary>
                Loads the scoreboard from the saved file if it is present.
            </summary>
            <returns>An asynchronous operation.</returns>
        </member>
        <member name="M:DodgeDots.Model.HighScoreManager.SaveHighScoresAsync">
            <summary>
                Saves the score board out to the file.
            </summary>
            <returns>An asynchronous operation.</returns>
        </member>
        <member name="M:DodgeDots.Model.HighScoreManager.AddScore(System.Int32,System.Int32,System.String)">
            <summary>
                Adds an entry to the scoreboard.
            </summary>
            <param name="score">The score achieved.</param>
            <param name="level">The level achieved.</param>
            <param name="name">The users name.</param>
        </member>
        <member name="M:DodgeDots.Model.HighScoreManager.SortTopTen">
            <summary>
                Sorts the top ten elements on the scoreboard.
            </summary>
        </member>
        <member name="T:DodgeDots.Model.UserScore">
            <summary>
                Defines an entry in the scoreboard.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.UserScore.Score">
            <summary>
                The score achieved.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.UserScore.Level">
            <summary>
                The level achieved.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.UserScore.Username">
            <summary>
                The users name.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.UserScore.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
                Initializes a new entry of <see cref="T:DodgeDots.Model.UserScore" />.
            </summary>
            <param name="score">The score achieved.</param>
            <param name="level">The level achieved.</param>
            <param name="username">The users name.</param>
        </member>
        <member name="M:DodgeDots.Model.UserScore.ToString">
            <summary>
                Returns a string that represents the entry.
            </summary>
            <returns>A string that represents the entry.</returns>
        </member>
        <member name="T:DodgeDots.Model.LevelOne">
            <summary>
                Stores the game settings for level one.
                TODO Is it ok to declare them like this?
            </summary>
        </member>
        <member name="M:DodgeDots.Model.LevelOne.#ctor">
            <summary>
                Initiates the <see cref="T:DodgeDots.Model.LevelOne" /> settings.
            </summary>
        </member>
        <member name="T:DodgeDots.Model.LevelTwo">
            <summary>
                Stores the game settings for level two.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.LevelTwo.#ctor">
            <summary>
                Initiates the <see cref="T:DodgeDots.Model.LevelTwo" /> settings.
            </summary>
        </member>
        <member name="T:DodgeDots.Model.LevelThree">
            <summary>
                Stores the game settings for level Three.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.LevelThree.#ctor">
            <summary>
                Initiates the <see cref="T:DodgeDots.Model.LevelThree" /> settings.
            </summary>
        </member>
        <member name="T:DodgeDots.Model.Level">
            <summary>
                Base level class to define what information to store.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.Level.Title">
            <summary>
                The title of the level.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.Level.GameSurvivalTime">
            <summary>
                The length of the level in seconds.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.Level.WaveInterval">
            <summary>
                The interval between waves in the level in seconds.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.Level.Waves">
            <summary>
                List of waves in the level.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.Level.WaveColors">
            <summary>
                A list of wave colors for all except final blitz.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.Level.FinalColor">
            <summary>
                The color of the final blitz wave if one is present.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.Level.PointTypes">
            <summary>
                The point objects that spawn in the level.
            </summary>
        </member>
        <member name="T:DodgeDots.Model.LevelManager">
            <summary>
                Manages the different levels and level settings inside the game.
            </summary>
        </member>
        <member name="T:DodgeDots.Model.LevelManager.GameLostHandler">
            <summary>
                A delegate for losing the game.
            </summary>
        </member>
        <member name="T:DodgeDots.Model.LevelManager.GameTimeHandler">
            <summary>
                A delegate for the countdown
            </summary>
            <param name="countDownNumber">The count down number.</param>
        </member>
        <member name="T:DodgeDots.Model.LevelManager.LevelWonHandler">
            <summary>
                A delegate for winning the game.
            </summary>
        </member>
        <member name="T:DodgeDots.Model.LevelManager.PointHitHandler">
            <summary>
                A delegate for hitting a point object
            </summary>
            <param name="pointAmount">The point amount.</param>
        </member>
        <member name="P:DodgeDots.Model.LevelManager.CountdownCount">
            <summary>
                The time left in the level.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.LevelManager.#ctor(Windows.UI.Xaml.Controls.Canvas,DodgeDots.Model.Player)">
            <summary>
                Initializes a instance of <see cref="T:DodgeDots.Model.LevelManager" /> class.
            </summary>
            <param name="background">The canvas to display on.</param>
            <param name="player">The player to manipulate.</param>
        </member>
        <member name="M:DodgeDots.Model.LevelManager.InitializeGame(DodgeDots.Model.Level)">
            <summary>
                Initializes the game placing player in the game
                Precondition: background != null
                Post-condition: Game is initialized and ready for play.
            </summary>
            <param name="level">The level data to run the level/game with</param>
        </member>
        <member name="E:DodgeDots.Model.LevelManager.GameTimeUpdated">
            <summary>
                Occurs when [game time updated].
            </summary>
        </member>
        <member name="E:DodgeDots.Model.LevelManager.LevelWon">
            <summary>
                Occurs when [game won].
            </summary>
        </member>
        <member name="E:DodgeDots.Model.LevelManager.GameLost">
            <summary>
                Occurs when [game lost].
            </summary>
        </member>
        <member name="E:DodgeDots.Model.LevelManager.LifeUpdate">
            <summary>
                Occurs when [life lost].
            </summary>
        </member>
        <member name="E:DodgeDots.Model.LevelManager.PointHit">
            <summary>
                Occurs when Player hits a Point.
            </summary>
        </member>
        <member name="T:DodgeDots.Model.Player">
            <summary>
                Manages the player.
            </summary>
            <seealso cref="T:DodgeDots.Model.GameObject" />
        </member>
        <member name="P:DodgeDots.Model.Player.OuterColor">
            <summary>
                Gets the color of the outer circle.
            </summary>
            <value>
                The color of the outer.
            </value>
        </member>
        <member name="P:DodgeDots.Model.Player.Colors">
            <summary>
                A collection of colors the player can swap through.
            </summary>
            <value>
                A collection of colors.
            </value>
        </member>
        <member name="P:DodgeDots.Model.Player.PlayerSprite">
            <summary>
                Gets the players sprite object.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.Player.PlayerLives">
            <summary>
                The amount of lives the player has in the game.
                TODO Potentially move out to PlayerManager
            </summary>
        </member>
        <member name="M:DodgeDots.Model.Player.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:DodgeDots.Model.Player" /> class.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.Player.SetColors">
            <summary>
                Rotates through to the next set of colors the player has.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.Player.SwapNextOuterColor">
            <summary>
                Sets the color of the player.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.Player.MoveLeft">
            <summary>
                Moves the player left.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.Player.MoveRight">
            <summary>
                Moves the player right.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.Player.MoveUp">
            <summary>
                Moves the player up.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.Player.MoveDown">
            <summary>
                Moves the player down.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.Player.IsCircleOverlapPlayer(DodgeDots.Model.GameObject)">
            <summary>
                Tests if the player overlaps the given GameObject.
            </summary>
            <param name="dot">The GameObject to test overlap of.</param>
            <returns>
                <value>True</value>
                if overlap and
                <value>false</value>
                otherwise.
            </returns>
        </member>
        <member name="M:DodgeDots.Model.Player.IsColorSameAsPlayer(DodgeDots.Model.Dot)">
            <summary>
                Tests if the player and the given GameObject have the same color.
            </summary>
            <param name="dot">The GameObject to test color of.</param>
            <returns>
                <value>True</value>
                if colors are the same and
                <value>false</value>
                otherwise.
            </returns>
        </member>
        <member name="M:DodgeDots.Model.Player.DyingAnimation">
            <summary>
                Starts the dying animation timer.
            </summary>
        </member>
        <member name="T:DodgeDots.Model.PlayerDotManager">
            <summary>
                Manages the Player Dot in the game.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.PlayerDotManager.PlayerDot">
            <summary>
                Gets the player dot.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.PlayerDotManager.#ctor(Windows.UI.Xaml.Controls.Canvas)">
            <summary>
                Initializes a new instance of the <see cref="T:DodgeDots.Model.PlayerDotManager" /> class.
            </summary>
            <param name="background">The background.</param>
        </member>
        <member name="M:DodgeDots.Model.PlayerDotManager.PlacePlayerCenteredInGameArena">
            <summary>
                Place the player in the center of the display.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.PlayerDotManager.StopPlayer">
            <summary>
                Stops the player movement.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.PlayerDotManager.RestartPlayer">
            <summary>
                Restarts the player movement.
            </summary>
        </member>
        <member name="T:DodgeDots.Model.PointManager">
            <summary>
                The Point Manager class
            </summary>
        </member>
        <member name="P:DodgeDots.Model.PointManager.Count">
            <summary>
                Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
        </member>
        <member name="P:DodgeDots.Model.PointManager.IsReadOnly">
            <summary>
                Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.PointManager.#ctor(Windows.UI.Xaml.Controls.Canvas,DodgeDots.Model.GameSettings.PointType)">
            <summary>
                Initializes a new instance of the <see cref="T:DodgeDots.Model.PointManager" /> class.
            </summary>
            <param name="background">The background.</param>
            <param name="type">The type of point objects to spawn.</param>
        </member>
        <member name="M:DodgeDots.Model.PointManager.GetEnumerator">
            <summary>
                Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
                An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:DodgeDots.Model.PointManager.Add(DodgeDots.Model.PointObject)">
            <summary>
                Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
        </member>
        <member name="M:DodgeDots.Model.PointManager.Clear">
            <summary>
                Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.PointManager.Contains(DodgeDots.Model.PointObject)">
            <summary>
                Determines whether this instance contains the object.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
                true if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:DodgeDots.Model.PointManager.CopyTo(DodgeDots.Model.PointObject[],System.Int32)">
            <summary>
                Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"></see> to an
                <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">
                The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements
                copied from <see cref="T:System.Collections.Generic.ICollection`1"></see>. The <see cref="T:System.Array"></see>
                must have zero-based indexing.
            </param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:DodgeDots.Model.PointManager.Remove(DodgeDots.Model.PointObject)">
            <summary>
                Removes the first occurrence of a specific object from the
                <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
                true if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"></see>;
                otherwise, false. This method also returns false if item is not found in the original
                <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </returns>
        </member>
        <member name="M:DodgeDots.Model.PointManager.StopPointManager">
            <summary>
                Removes all point objects from tacking and canvas.
            </summary>
        </member>
        <member name="T:DodgeDots.Model.PointObject">
            <summary>
                Point Object class.
            </summary>
            <seealso cref="T:DodgeDots.Model.GameObject" />
        </member>
        <member name="P:DodgeDots.Model.PointObject.PointAmount">
            <summary>
                Gets the point amount.
            </summary>
            <value>
                The point amount.
            </value>
        </member>
        <member name="M:DodgeDots.Model.PointObject.#ctor(System.Int32,Windows.UI.Color)">
            <summary>
                Initializes a new instance of the <see cref="T:DodgeDots.Model.PointObject" /> class.
                precondition: pointAmount > 0
                post-condition: PointAmount == pointAmount
            </summary>
        </member>
        <member name="T:DodgeDots.Model.WaveManager">
            <summary>
                Manages all the waves of dots in the game
            </summary>
        </member>
        <member name="M:DodgeDots.Model.WaveManager.#ctor(Windows.UI.Xaml.Controls.Canvas,DodgeDots.Model.Player)">
            <summary>
                Initializes a new instance of the <see cref="T:DodgeDots.Model.WaveManager" /> class.
            </summary>
            <param name="background">The background.</param>
            <param name="player">The player.</param>
        </member>
        <member name="M:DodgeDots.Model.WaveManager.StartWave(DodgeDots.Model.GameSettings.Wave,Windows.UI.Color)">
            <summary>
                Starts a new wave that moves newly populated dots
                from the top of the screen to the bottom of the screen.
            </summary>
            <param name="waveStart">The wave to create</param>
            <param name="color">The color of the dots within the wave</param>
        </member>
        <member name="M:DodgeDots.Model.WaveManager.HasPlayerHitADot">
            <summary>
                Checks if the player hits any dot in the game.
            </summary>
            <returns> true if player hits a dot, false otherwise </returns>
        </member>
        <member name="M:DodgeDots.Model.WaveManager.StopAllActiveWaveObjects">
            <summary>
                Stops all active dot managers.
            </summary>
        </member>
        <member name="M:DodgeDots.Model.WaveManager.RemoveAllWaves">
            <summary>
                Removes all waves from tracking and display.
            </summary>
        </member>
        <member name="T:DodgeDots.View.GamePage">
            <summary>
                The main page for the game.
            </summary>
        </member>
        <member name="M:DodgeDots.View.GamePage.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:DodgeDots.View.GamePage" /> class.
            </summary>
        </member>
        <member name="M:DodgeDots.View.GamePage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
            <summary>
                Invoked when Page is loaded and becomes the current source of a parent Frame.
            </summary>
            <param name="e">Event arguments passed to the method.</param>
        </member>
        <member name="M:DodgeDots.View.GamePage.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:DodgeDots.View.GamePage.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:DodgeDots.View.GamePage.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:DodgeDots.View.HighScorePage">
            <summary>
                The High Score Board page for displaying the top 10 high scores.
            </summary>
        </member>
        <member name="M:DodgeDots.View.HighScorePage.#ctor">
            <summary>
                The High Score Board page for displaying the top 10 high scores.
            </summary>
        </member>
        <member name="M:DodgeDots.View.HighScorePage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
            <summary>
                Invoked when Page is loaded and becomes the current source of a parent Frame.
            </summary>
            <param name="e">Event arguments passed to the method.</param>
        </member>
        <member name="M:DodgeDots.View.HighScorePage.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:DodgeDots.View.HighScorePage.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:DodgeDots.View.HighScorePage.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:DodgeDots.View.MainPage">
            <summary>
                The main view that opens when running application.
            </summary>
        </member>
        <member name="M:DodgeDots.View.MainPage.#ctor">
            <summary>
                The main view that opens when running application.
            </summary>
        </member>
        <member name="M:DodgeDots.View.MainPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
            <summary>
                Invoked when Page is loaded and becomes the current source of a parent Frame.
            </summary>
            <param name="e">Event arguments passed to the method.</param>
        </member>
        <member name="M:DodgeDots.View.MainPage.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:DodgeDots.View.MainPage.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:DodgeDots.View.MainPage.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:DodgeDots.View.GameOverView">
            <summary>
                An empty page that can be used on its own or navigated to within a Frame.
            </summary>
        </member>
        <member name="M:DodgeDots.View.GameOverView.#ctor">
            <summary>
                Initializes the game over view.
            </summary>
        </member>
        <member name="M:DodgeDots.View.GameOverView.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
            <summary>
                Invoked when Page is loaded and becomes the current source of a parent Frame.
            </summary>
            <param name="e">Event arguments passed to the method.</param>
        </member>
        <member name="M:DodgeDots.View.GameOverView.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:DodgeDots.View.GameOverView.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:DodgeDots.View.GameOverView.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:DodgeDots.View.Sprites.BaseSprite">
            <summary>
                Holds common functionality for all game sprites.
            </summary>
            <seealso cref="T:Windows.UI.Xaml.Controls.UserControl" />
        </member>
        <member name="M:DodgeDots.View.Sprites.BaseSprite.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:DodgeDots.View.Sprites.BaseSprite" /> class.
            </summary>
        </member>
        <member name="M:DodgeDots.View.Sprites.BaseSprite.RenderAt(System.Double,System.Double)">
            <summary>
            Renders user control at the specified (x,y) location in relation
            to the top, left part of the canvas.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:DodgeDots.View.Sprites.BaseSprite.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:DodgeDots.View.Sprites.BaseSprite.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:DodgeDots.View.Sprites.BaseSprite.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:DodgeDots.View.Sprites.DotSprite">
            <summary>
                Draws a enemy Dot object
            </summary>
            <seealso cref="T:DodgeDots.View.Sprites.BaseSprite" />
            <seealso cref="T:Windows.UI.Xaml.Markup.IComponentConnector" />
            <seealso cref="T:Windows.UI.Xaml.Markup.IComponentConnector2" />
        </member>
        <member name="M:DodgeDots.View.Sprites.DotSprite.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:DodgeDots.View.Sprites.DotSprite" /> class.
            </summary>
        </member>
        <member name="M:DodgeDots.View.Sprites.DotSprite.ChangeDotColor(Windows.UI.Color)">
            <summary>
                Changes the color of the dot to the specified color.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:DodgeDots.View.Sprites.DotSprite.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:DodgeDots.View.Sprites.DotSprite.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:DodgeDots.View.Sprites.DotSprite.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:DodgeDots.View.Sprites.ISpriteRenderer">
            <summary>
                Interface to render a sprite. This interface is needed within every sprite
                that is associated with a game object.
                The interface is to be implemented in the sprite class.
            </summary>
        </member>
        <member name="M:DodgeDots.View.Sprites.ISpriteRenderer.RenderAt(System.Double,System.Double)">
            <summary>
                Renders the sprite at the specified location.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="T:DodgeDots.View.Sprites.PlayerSprite">
            <summary>
                Draws the play object.
            </summary>
            <seealso cref="T:Windows.UI.Xaml.Controls.UserControl" />
        </member>
        <member name="M:DodgeDots.View.Sprites.PlayerSprite.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:DodgeDots.View.Sprites.PlayerSprite" /> class.
                Precondition: none
                Post-condition: Sprite created.
            </summary>
        </member>
        <member name="M:DodgeDots.View.Sprites.PlayerSprite.ChangeDotOuterColor(Windows.UI.Color)">
            <summary>
                Changes the color of the outer dot.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:DodgeDots.View.Sprites.PlayerSprite.ChangeDotInnerColor(Windows.UI.Color)">
            <summary>
                Changes the color of the inner dot.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:DodgeDots.View.Sprites.PlayerSprite.DyingAnimation">
            <summary>
                Runs the dying animation of the player dot.
            </summary>
        </member>
        <member name="M:DodgeDots.View.Sprites.PlayerSprite.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:DodgeDots.View.Sprites.PlayerSprite.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:DodgeDots.View.Sprites.PlayerSprite.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:DodgeDots.View.Sprites.PointSprite">
            <summary>
                The PointSprite CodeBehind
            </summary>
            <seealso cref="T:DodgeDots.View.Sprites.BaseSprite" />
            <seealso cref="T:Windows.UI.Xaml.Markup.IComponentConnector" />
            <seealso cref="T:Windows.UI.Xaml.Markup.IComponentConnector2" />
        </member>
        <member name="M:DodgeDots.View.Sprites.PointSprite.#ctor(Windows.UI.Color)">
            <summary>
                Initializes a new instance of the <see cref="T:DodgeDots.View.Sprites.PointSprite" /> class.
            </summary>
        </member>
        <member name="M:DodgeDots.View.Sprites.PointSprite.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:DodgeDots.View.Sprites.PointSprite.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:DodgeDots.View.Sprites.PointSprite.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:DodgeDots.Program">
            <summary>
            Program class
            </summary>
        </member>
        <member name="T:DodgeDots.DodgeDots_XamlTypeInfo.XamlMetaDataProvider">
            <summary>
            Main class for providing metadata for the app or library
            </summary>
        </member>
        <member name="M:DodgeDots.DodgeDots_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.Type)">
            <summary>
            GetXamlType(Type)
            </summary>
        </member>
        <member name="M:DodgeDots.DodgeDots_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.String)">
            <summary>
            GetXamlType(String)
            </summary>
        </member>
        <member name="M:DodgeDots.DodgeDots_XamlTypeInfo.XamlMetaDataProvider.GetXmlnsDefinitions">
            <summary>
            GetXmlnsDefinitions()
            </summary>
        </member>
    </members>
</doc>
